
local cjson = require "cjson"
-- writefile
local function write_file(filename, content)
	content = [[local _M ={}
    function _M.execute()
	ngx.say(']] .. content .. [[
    ')
    end
    return _M]]
	local file = io.open(filename,'w+')
	if not file then
		return "can\'t open file \"" .. file_name .. "\""
	end
	local f, err = pcall(function()
		file:write(content)
	end)
	file:close()
	if err == nil then
		return "success"
	else
		return err
	end
end

--get params
if "GET" == ngx.var.request_method then
	ngx.say([[<html>
	 <head>
		 <meta charset="UTF-8">
		 <title>Lua-vulnerability</title>
	 </head>
	 <body>
		 <h1>文件包含 demo </h1>
		 请输入对 hara 说的话: <input type="text" id="content" value="Hello I am lockcy" size="20"><br>
		 <a href="javascript:void(0)" onclick="query()">确定</a>
		 <br>
		 <a href="javascript:void(0)" onclick="source()">查看lua源码</a>
		 <div id="result"></div>
		 <script src="//cdn.bootcss.com/jquery/2.2.4/jquery.min.js"></script>
		 <script>
			 function query() {
				 var content = $('#content').val()
				 $.ajax({
					 type: "post",
					 url: "/file-include",
					 dataType: "text",
					 contentType: 'application/json',
					 data:JSON.stringify({"content":content}),
					 success: function (res) {
					 $("#result").html(res);
					 }
				 });
			 }
			 function source() {
				 $.ajax({
					 type: "post",
					 url: "/file-include",
					 dataType: "text",
			 		 contentType: 'application/json',
					 data:JSON.stringify({"source":"1"}),
					 success: function (res) {
					 $("#result").html(res);
					 }
				 });
			 }
		 </script>
	 </body>
	 </html>]])
elseif "POST" == ngx.var.request_method then
	local args = ngx.req.get_body_data()
	local obj = cjson.new().decode(args)
	local source = obj["source"]
	local content = obj["content"]
	if source ~=nil then
		local content1 = [=[
			content = [[local _M ={}<br>
				function _M.execute()<br>
				ngx.say(']] .. content .. [[<br>
				')<br>
				end<br>
				return _M]]<br>
            local res = write_file("/usr/local/work/lua/mod1.lua", content)<br>
            if res == "success" then<br>
            &nbsp;&nbsp;&nbsp;&nbsp;package.path = package.path .. ";/usr/local/work/lua/?.lua"<br>
            &nbsp;&nbsp;&nbsp;&nbsp;local mod1 = require "mod1.lua"<br>
            &nbsp;&nbsp;&nbsp;&nbsp;mod1.execute()<br>
        else<br>
            &nbsp;&nbsp;&nbsp;&nbsp;ngx.say(res)<br>
        end<br>
	    ]=]
		ngx.say(content1)
	else
		if content == nil or #content==0 then
			content = "Hello I am lockcy"
		end
		local res = write_file("/usr/local/work/lua/mod1.lua", content)
		if res == "success" then
			package.path = package.path .. ";/usr/local/work/lua/?.lua"
			local mod1 = require("mod1")
			local m,e = pcall(function()
				mod1.execute()
			end)
		else
			ngx.say(res)
		end
	end
end



