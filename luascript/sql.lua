
local cjson = require "cjson"

--get body
if "GET" == ngx.var.request_method then
    ngx.say([[<html>
<head>
    <meta charset="UTF-8">
    <title>Lua-vulnerability</title>
</head>
<body>
    <h1>sql 注入 demo </h1>
    请输入用户名: <input type="text" id="username" value="" size="20"><br>
    请输入密码: &nbsp;&nbsp;&nbsp;&nbsp;<input type="password" id="password" value="" size="20"><br>
    <a href="javascript:void(0)" onclick="login()">登录</a>
    <br>
    <a href="javascript:void(0)" onclick="source()">查看lua源码</a>
    <div id="result"></div>
    <script src="//cdn.bootcss.com/jquery/2.2.4/jquery.min.js"></script>
    <script>
        function login() {
            var username = $('#username').val()
            var password = $('#password').val()
            $.ajax({
                type: "post",
                url: "/sql-injection",
                dataType: "text",
		        contentType: 'application/json',
                data:JSON.stringify({"username":username,"password":password}),
                success: function (res) {
	            $("#result").html(res);

                }
            });
		}
        function source() {
            $.ajax({
                type: "post",
                url: "/sql-injection",
                dataType: "text",
		        contentType: 'application/json',
                data:JSON.stringify({"source":"1"}),
                success: function (res) {
	            $("#result").html(res);
                }
            });
		}
    </script>
</body>
</html>]])
elseif "POST" == ngx.var.request_method then
    local args = ngx.req.get_body_data()
    local obj = cjson.new().decode(args)
    local source = obj["source"]
    local username = obj["username"]
    local password = obj["password"]
    if source ~=nil then
        local content = [[
        local query = \[\[SELECT * FROM user1 WHERE username='%s' AND password='%s' limit 1\]\]<br>
        query = string.format(query, username, password)<br>
        local res,err,errno,sqlstate= db:query(query)<br>
        if not (res ==nil or next(res)==nil) then<br>
            &nbsp;&nbsp;&nbsp;&nbsp;local username = res[1].username<br>
            &nbsp;&nbsp;&nbsp;&nbsp;local password = res[1].password<br>
            &nbsp;&nbsp;&nbsp;&nbsp;if username == "test" and password == "test" then<br>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngx.say("login success")<br>
            &nbsp;&nbsp;&nbsp;&nbsp;else<br>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ngx.say("login failed")<br>
            &nbsp;&nbsp;&nbsp;&nbsp;end<br>
        end<br>
        ]]
        ngx.say(content)
    else
        local mysql = require("resty.mysql")
        local db, err = mysql:new()
        if not db then
            ngx.say("new mysql error : ", err)
            return
        end
        local props = {
            host = "127.0.0.1",
            port = 3306,
            database = "test",
            user = "root",
            password = "root"
        }

        local res, err, errno, sqlstate = db:connect(props)
        if not res then
            ngx.say("connect to mysql error : ", err, " , errno : ", errno, " , sqlstate : ", sqlstate)
            return close_db(db)
        else
            ngx.say("connect database success")
        end
        ngx.say("<br>")
        if username == nil or password == nil or #username==0 or #password==0 then
            ngx.say('username or password is empty')
        else
            local query = [[SELECT * FROM user1 WHERE username='%s' AND password='%s' limit 1]]
            query = string.format(query, username, password)
            local res,err,errno,sqlstate= db:query(query)
            if not (res ==nil or next(res)==nil) then
                local username = res[1].username
                local password = res[1].password
                if username == "test" and password == "test" then
                    ngx.say("login success")
		    end
            else
                ngx.say("login failed")
            end
        end
	db:close()
    end
end








