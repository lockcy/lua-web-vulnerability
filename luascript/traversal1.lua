
local cjson = require "cjson"
-- readfile
local function read_file(file_name)
	if not file_name then
		return nil, "missing file_name"
	end
	local file = io.open(file_name,'r')
	if not file then
		return nil, "can\'t open file \"" .. file_name .. "\""
	end
	local content = file:read('*all')
	file:close()
	return content, nil
end


--get params
if "GET" == ngx.var.request_method then
    local file = ngx.req.get_uri_args()["filename"]
	 if file ~= nil then
		 local content, err = read_file("/usr/local/work/files/".. file .. ".txt")
		 ngx.say(content)
	 else
		 ngx.say([[<html>
	 <head>
		 <meta charset="UTF-8">
		 <title>Lua-vulnerability</title>
	 </head>
	 <body>
		 <h1>路径穿越(文件名截断) demo </h1>
		 请输入文件名: <input type="text" id="filename" value="example" size="20">.txt<br>
		 <a href="javascript:void(0)" onclick="query()">读取文件</a>
		 <br>
		 <a href="javascript:void(0)" onclick="source()">查看lua源码</a>
		 <div id="result"></div>
		 <script src="//cdn.bootcss.com/jquery/2.2.4/jquery.min.js"></script>
		 <script>
			 function query() {
				 var filename = $('#filename').val()
				 $.ajax({
					 type: "get",
					 url: "/traversal1?filename="+filename,
					 dataType: "text",
					 success: function (res) {
					 $("#result").html(res);

					 }
				 });
			 }
			 function source() {
				 $.ajax({
					 type: "post",
					 url: "/traversal1",
					 dataType: "text",
			 contentType: 'application/json',
					 data:JSON.stringify({"source":"1"}),
					 success: function (res) {
					 $("#result").html(res);

					 }
				 });
			 }
		 </script>
	 </body>
	 </html>]])
	 end
elseif "POST" == ngx.var.request_method then
	local args = ngx.req.get_body_data()
	local obj = cjson.new().decode(args)
	local source = obj["source"]
	local file = obj["filename"]
	if source ~=nil then
	    local content = [[
	    local file = ngx.req.get_uri_args()["filename"] &nbsp;&nbsp;&nbsp;-- get 方式读取参数<br>
		if file ~= nil then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;local content, err = read_file("/usr/local/work/files/".. file .. ".txt")<br>
	    &nbsp;&nbsp;&nbsp;&nbsp;ngx.say(content)<br>
	    end<br>
	    -- 思考一下如果用 post 方式传参是否还能截断后缀名，造成跨目录攻击(一定可以还是有条件)？
	    ]]
	    ngx.say(content)
	else
	    if file == nil or #file==0 then
		    file = "example"
	    end
	    local content, err = read_file("/usr/local/work/files/".. file .. ".txt")
        ngx.say(content)
	end
end


